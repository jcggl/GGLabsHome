{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useEffect, useCallback } from \"react\";\nimport useResize from './useResize';\nconst useAutoSlide = imageSize => {\n  _s();\n  const {\n    width: windowWidth\n  } = useResize();\n  const imgSize = useRef(imageSize);\n  const [current, setCurrent] = useState(0);\n  const [style, setStyle] = useState({\n    marginLeft: `-${current}00%`,\n    transition: \"all 0.5s ease-out\"\n  });\n  const initialLogoHandler = useCallback(index => {\n    setCurrent(index);\n  }, []);\n\n  /**\n   * 윈도우 크기에 따라 화면에 보이는 파트너 갯수\n   */\n  const contentsNumberChecker = useCallback(() => {\n    if (1080 > windowWidth) return 2;\n    if (1080 <= windowWidth && 1920 > windowWidth) return 4;\n    if (1920 <= windowWidth) return 6;\n    return 6;\n  }, [windowWidth]);\n  const [contentWidth, setContentWidth] = useState({\n    width: `${windowWidth / contentsNumberChecker()}px`\n  });\n  const moveSlide = index => {\n    let nextIndex = current + index;\n    if (current === imgSize.current / 2) nextIndex = 0;\n    setCurrent(nextIndex);\n  };\n  useEffect(() => {\n    setStyle(prev => ({\n      ...prev,\n      marginLeft: `-${current * (windowWidth / (contentsNumberChecker() * 2))}px`\n    }));\n  }, [current, windowWidth, contentsNumberChecker]);\n  useEffect(() => {\n    setContentWidth(prev => {\n      return {\n        width: `${windowWidth / contentsNumberChecker()}px`\n      };\n    });\n  }, [windowWidth, contentsNumberChecker]);\n\n  //0.3초의 transition을 잠깐 없애고 양 끝이 아니라면 transition을 다시 적용.\n  useEffect(() => {\n    if (current === imgSize.current / 2) {\n      let timer = setTimeout(() => {\n        setStyle(prev => ({\n          ...prev,\n          transition: \"\"\n        }));\n        setCurrent(0);\n      }, 500);\n      return () => clearTimeout(timer);\n    } else if (current === 0) {\n      let timer = setTimeout(() => {\n        setStyle(prev => ({\n          ...prev,\n          transition: \"all 0.5s ease-out\"\n        }));\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [current]);\n  return {\n    moveSlide,\n    style,\n    current,\n    contentWidth,\n    initialLogoHandler\n  };\n};\n_s(useAutoSlide, \"jexZ4MtGN7N8ahgAQw2CgW/l/nE=\", false, function () {\n  return [useResize];\n});\nexport default useAutoSlide;","map":{"version":3,"names":["useState","useRef","useEffect","useCallback","useResize","useAutoSlide","imageSize","width","windowWidth","imgSize","current","setCurrent","style","setStyle","marginLeft","transition","initialLogoHandler","index","contentsNumberChecker","contentWidth","setContentWidth","moveSlide","nextIndex","prev","timer","setTimeout","clearTimeout"],"sources":["/Users/magicmars123/Desktop/작업공간.nosync/GGlabsBuild/src/hooks/useAutoSlide.tsx"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from \"react\";\n\nimport useResize from './useResize';\n\ninterface positionStyleType {\n  marginLeft: string;\n  transition: string;\n}\n\ninterface contentWidthType {\n  width: string;\n}\n\nconst useAutoSlide = (imageSize: number) => {\n  const {width:windowWidth} = useResize();\n   const imgSize = useRef<number>(imageSize);\n  const [current, setCurrent] = useState<number>(0);\n  const [style, setStyle] = useState<positionStyleType>({\n    marginLeft: `-${current}00%`,\n    transition: \"all 0.5s ease-out\",\n  });\n\n  const initialLogoHandler = useCallback((index:number) => {\n    setCurrent(index)\n  },[])\n\n  /**\n   * 윈도우 크기에 따라 화면에 보이는 파트너 갯수\n   */\n  const contentsNumberChecker = useCallback(():number => {\n    if (1080 > windowWidth) return 2\n    if (1080 <= windowWidth && 1920 > windowWidth) return 4\n    if (1920 <= windowWidth) return 6\n    return 6\n  }, [windowWidth])\n  const [contentWidth, setContentWidth] = useState<contentWidthType>({width:`${windowWidth/contentsNumberChecker()}px`})\n  \n  const moveSlide = (index: number): void => {\n    let nextIndex: number = current + index;\n    if(current === imgSize.current/2) nextIndex = 0;\n    setCurrent(nextIndex);\n  };\n\n  useEffect(() => {\n    setStyle((prev) => ({ ...prev, marginLeft: `-${current*(windowWidth/(contentsNumberChecker()*2))}px` }));\n  }, [current, windowWidth, contentsNumberChecker]);\n\n  useEffect(() => {\n    setContentWidth((prev) => { return {width:`${windowWidth/contentsNumberChecker()}px`}})\n  }, [windowWidth, contentsNumberChecker])\n\n  //0.3초의 transition을 잠깐 없애고 양 끝이 아니라면 transition을 다시 적용.\n  useEffect(() => {\n    if (current === imgSize.current/2) {\n      let timer = setTimeout(() => {\n        setStyle((prev) => ({ ...prev, transition: \"\" }));\n        setCurrent(0);\n      }, 500);\n      return () => clearTimeout(timer);\n    } else if (current === 0) {\n      let timer = setTimeout(() => {\n        setStyle((prev) => ({\n          ...prev,\n          transition: \"all 0.5s ease-out\",\n        }));\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [current]);\n\n  return { moveSlide, style, current, contentWidth, initialLogoHandler };\n};\n\nexport default useAutoSlide;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}